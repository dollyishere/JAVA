클래스:
1. Java 클래스의 종류
	1. 메인 클래스: main() 포함
					프로젝트 내에 단 하나만 존재해야 함
					프로젝트가 실행될 때, 가장 먼저 자동 호출되는 클래스
	2. 일반 클래스: 반드시 생성자를 포함하고 있어야 함
					다른 클래스가 일반 클래스를 인스턴스화 해야만 사용 가능
					(즉, 하나의 객체로 생성시켜 줘야 함)
	3. 추상 클래스
	4. 인터페이스(interface) 클래스
	
일반 클래스의 구성 요소
1. 클래스 선언부(필수)
	public class 클래스명 {
	
	}
	
2. 클래스 블록 내에는 반드시 생성자가 포함되어 있어야 한다(필수)
	생성자
	public 클래스명과 동일() {
	
	}
	new EMPDataClass();처럼 클래스 생성할 때 사용됨!
	
3. 변수(다양한 타입의 변수들.../ 배열)
	int / float / String ...
	
4. 메서드들...
	public 반환타입 메서드명(변수선언) {
	
	}
	변수선언 : 외부로부터 데이터를 전달 받아서 저장하는 매개체 역할 변수(이를 매개변수라고 호칭)
	
	// 반환 데이터가 없을 경우
	public void 메서드명() {
	
	}
	
	// 반환 데이터가 있을 경우 (예: 정수일 시)
	public int 메서드명() {
		return 반환되는 값; (반드시 들어가 있어야 함)
	}
	
	// 반환 데이터가 없고, 외부로부터 전달받을 값이 있을 경우(예: 정수일 시)
	public void 메서드명(int n) { // n이 외부로부터 전달 받을 값
	
	}
	
	// 반환 데이터가 있고(예: 문자열일 시), 외부로부터 전달받을 값이 있을 경우(예: 정수일 시)
	public String 메서드명(int n) { // n이 외부로부터 전달 받을 값
		return 문자열;
	}
	
	// 반환 데이터가 있고(예: 문자열일 시), 외부로부터 전달받을 값이 두 개 이상일 경우(예: 정수, 문자일 시)
	public String 메서드명(int n, char c) { // n, c이 외부로부터 전달 받을 값
		return 문자열;
	}
	
	// ** 주의사항: 반환되는 데이터는 반드시 하나만 갖는다
	public String, String 메서드명() { // 불가능!!!!!! => 자바 문법적으로는 위배(파이썬에서는 된다는디)
		return 문자열, 문자열;
	}
	
	// 만약 두 개 이상을 넘겨주고 싶으면, 아래처럼 묶어줘야 함(배열로)
	public String[] 메서드명() { // 불가능!!!!!! => 자바 문법적으로는 위배(파이썬에서는 된다는디)
		String[] str = {문자열, 문자열};
		return str;
	}
	
	* 일반 클래스 명 EMPDataClass