# 프로젝트 사전 정의

### 프로젝트 목적

해당 Employee 프로젝트는 MySQL과 연결하여, CRUD를 모두 수행하는 프로젝트라고 할 수 있음

### 프로젝트 기능

- 안내 문구에 따라 값을 입력할 수 있음
- 입력한 값에 따라 수행할 수 있는 게 달라짐
    1. 을 누를 시, 전체 사원 조회가 가능함
    2. 를 누를 시, 신규 사원 추가가 가능함
    3. 을 누를 시, 전 사용 급여를 10% 상향 가능
    4. 를 누를 시, 과장 직책 사원 데이터가 삭제됨
    5. 를 누를 시, 프로세스가 종료됨
- 이는 ‘5번’을 누르기 전까지는(정확히 1,2,3,4 번 내에서만 누를 때) 계속해서 반복됨

### 그렇다면 어떤 것이 필요한가?

- mysql과 접속해야 함 ⇒ db 패키지, mysqlconnector
- mysql에 만들어진 테이블과 같은 dto(데이터를 싣고 다니는 오브젝트)를 설계해야 함 ⇒ dto, employee
- mysql에 실제로 적용될 쿼리문을 모아두어야 함 ⇒ querys의 상수
- mysql과 접촉해서 쿼리문을 수행하는 메서드를 모아두어야 함 ⇒ util
- 실제 결과 출력할 수 있는 메서드가 존재해야 함(View) ⇒ print
- 그리고 이 모든 것이 main에서 수행되어야 함 ⇒ main!

# 구조 설계

### 패키지, 클래스

- DB(com.dolly.db)
    - MySQLConnector
        - db 연결하는 메서드 실행
    - Querys(Querys)
        - 쿼리문 상수로 저장(`public static final String`)
- DTO(com.dolly.dto)
    - Employee(Employee)
        - employee 테이블이 가진 요소들 동일하게 저장
- DAO(com.dolly.dao)
    - Dao (DaoClass)
        - CRUD 관련 메서드 저장
- Util(com.dolly.util)
    - Util(UtilClass)
        - 메서드 저장
- View(com.dolly.view)
    - Print (PrintResult)
        - 요청 결과값 프린트
- main(com.dolly)
    - Main (EmployeeMain)
        - 메서드 실행 주체?
